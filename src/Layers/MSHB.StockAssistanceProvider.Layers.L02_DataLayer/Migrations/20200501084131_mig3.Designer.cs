// <auto-generated />
using System;
using MSHB.StockAssistanceProvider.Layers.L02_DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MSHB.StockAssistanceProvider.Layers.L02_DataLayer.Migrations
{
    [DbContext(typeof(StockAssistanceProviderDbContext))]
    [Migration("20200501084131_mig3")]
    partial class mig3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.AppLogItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Board", b =>
                {
                    b.Property<long>("CComVal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CComVal");

                    b.ToTable("Board_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.FileAddress", b =>
                {
                    b.Property<Guid>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FileId");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("FileAddress_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.GroupAuth", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroupAuth_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.GroupAuthRole", b =>
                {
                    b.Property<long?>("GroupAuthId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("GroupAuthId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("GroupAuthRole_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BaseVol")
                        .HasColumnType("bigint");

                    b.Property<long?>("CComVal")
                        .HasColumnType("bigint");

                    b.Property<string>("CGdSVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CGrValCot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIsin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CSecVal")
                        .HasColumnType("bigint");

                    b.Property<long?>("CSoSecVal")
                        .HasColumnType("bigint");

                    b.Property<string>("CSocCSAC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CValMne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("DESop")
                        .HasColumnType("int");

                    b.Property<int>("DEVen")
                        .HasColumnType("int");

                    b.Property<int>("DInMar")
                        .HasColumnType("int");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<long>("InsCode")
                        .HasColumnType("bigint");

                    b.Property<string>("InstrumentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstrumentState")
                        .HasColumnType("int");

                    b.Property<int>("InstrumentType")
                        .HasColumnType("int");

                    b.Property<string>("LSoc30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal18AFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PSaiSMaxOkValMdinOccurs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PSaiSMinOkValMdinOccurs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QNmVlo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QPasCotFxeVal")
                        .HasColumnType("int");

                    b.Property<int>("QQtTranMarVal")
                        .HasColumnType("int");

                    b.Property<long>("QtitMaxSaiOmProd")
                        .HasColumnType("bigint");

                    b.Property<long>("QtitMinSaiOmProd")
                        .HasColumnType("bigint");

                    b.Property<short>("Valid")
                        .HasColumnType("smallint");

                    b.Property<int>("YDeComp")
                        .HasColumnType("int");

                    b.Property<string>("YMarNSC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YOPSJ")
                        .HasColumnType("int");

                    b.Property<int>("YUniExpP")
                        .HasColumnType("int");

                    b.Property<int>("YVal")
                        .HasColumnType("int");

                    b.Property<decimal>("ZTitad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CComVal");

                    b.HasIndex("CSecVal");

                    b.HasIndex("CSoSecVal");

                    b.ToTable("Instrument_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeBuy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalyzeState")
                        .HasColumnType("int");

                    b.Property<int>("AnalyzeType")
                        .HasColumnType("int");

                    b.Property<Guid>("AnalyzerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstrumentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnalyzerUserId");

                    b.HasIndex("InstrumentId");

                    b.ToTable("InstrumentAnalayzeBuy_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeSell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalyzeState")
                        .HasColumnType("int");

                    b.Property<int>("AnalyzeType")
                        .HasColumnType("int");

                    b.Property<Guid>("AnalyzerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstrumentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnalyzerUserId");

                    b.HasIndex("InstrumentId");

                    b.ToTable("InstrumentAnalayzeSell_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentCycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<long>("InstrumentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("InstrumentState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SenderUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("InstrumentState");

                    b.HasIndex("SenderUserId");

                    b.ToTable("InstrumentCycle_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentDescriptionBuy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstrumentAnalayzeBuyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeBuyId");

                    b.ToTable("InstrumentDescriptionBuy_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentDescriptionSell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstrumentAnalayzeSellId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeSellId");

                    b.ToTable("InstrumentDescriptionSell_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstrumentId")
                        .HasColumnType("bigint");

                    b.Property<int>("InstrumentInformationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("UserId");

                    b.ToTable("InstrumentInformation_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentUserMapper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BaseVol")
                        .HasColumnType("bigint");

                    b.Property<long?>("CComVal")
                        .HasColumnType("bigint");

                    b.Property<string>("CGdSVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CGrValCot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIsin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CSecVal")
                        .HasColumnType("bigint");

                    b.Property<long?>("CSoSecVal")
                        .HasColumnType("bigint");

                    b.Property<string>("CSocCSAC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CValMne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DESop")
                        .HasColumnType("int");

                    b.Property<int>("DEVen")
                        .HasColumnType("int");

                    b.Property<int>("DInMar")
                        .HasColumnType("int");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<long>("InsCode")
                        .HasColumnType("bigint");

                    b.Property<string>("InstrumentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstrumentState")
                        .HasColumnType("int");

                    b.Property<int>("InstrumentType")
                        .HasColumnType("int");

                    b.Property<string>("LSoc30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal18AFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVal30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PSaiSMaxOkValMdinOccurs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PSaiSMinOkValMdinOccurs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QNmVlo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QPasCotFxeVal")
                        .HasColumnType("int");

                    b.Property<int>("QQtTranMarVal")
                        .HasColumnType("int");

                    b.Property<long>("QtitMaxSaiOmProd")
                        .HasColumnType("bigint");

                    b.Property<long>("QtitMinSaiOmProd")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Valid")
                        .HasColumnType("smallint");

                    b.Property<int>("YDeComp")
                        .HasColumnType("int");

                    b.Property<string>("YMarNSC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YOPSJ")
                        .HasColumnType("int");

                    b.Property<int>("YUniExpP")
                        .HasColumnType("int");

                    b.Property<int>("YVal")
                        .HasColumnType("int");

                    b.Property<decimal>("ZTitad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CComVal");

                    b.HasIndex("CSecVal");

                    b.HasIndex("CSoSecVal");

                    b.HasIndex("UserId");

                    b.ToTable("InstrumentUserMapper_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.MarketValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MarketValuePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MarketValue_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.ReportStructure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProtoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportId")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportStructure_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstrumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SenderUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Request_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Sector", b =>
                {
                    b.Property<long>("CSecVal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LSecVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CSecVal");

                    b.ToTable("Sector_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SpecialInstrumentAnalayzedBuy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InstrumentAnalayzeBuyId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeBuyId");

                    b.HasIndex("UserId");

                    b.ToTable("SpecialInstrumentAnalayzedBuy_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SpecialInstrumentAnalayzedSell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InstrumentAnalayzeSellId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeSellId");

                    b.HasIndex("UserId");

                    b.ToTable("SpecialInstrumentAnalayzedSell_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SubSector", b =>
                {
                    b.Property<long?>("CSecVal")
                        .HasColumnType("bigint");

                    b.Property<long?>("CSoSecVal")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DEven")
                        .HasColumnType("int");

                    b.Property<string>("LSoSecVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CSecVal");

                    b.ToTable("SubSector_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvailableUserType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long?>("GroupAuthId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLockoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("LastLoggedIn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("LastPasswordChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("GroupAuthId");

                    b.HasIndex("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserConfiguration_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRankInstrumentBuy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstrumentAnalayzeBuyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RankNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeBuyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRankInstrumentBuy_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRankInstrumentSell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstrumentAnalayzeSellId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RankNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentAnalayzeSellId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRankInstrumentSell_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("AccessTokenExpiresDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("AccessTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RefreshTokenExpiresDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RefreshTokenIdHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("RefreshTokenIdHashSource")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken_T");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.FileAddress", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.GroupAuthRole", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.GroupAuth", "GroupAuth")
                        .WithMany("GroupRoles")
                        .HasForeignKey("GroupAuthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Board", "Board")
                        .WithMany("Instruments")
                        .HasForeignKey("CComVal");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Sector", "Sector")
                        .WithMany("Instruments")
                        .HasForeignKey("CSecVal");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SubSector", "SubSector")
                        .WithMany("Instruments")
                        .HasForeignKey("CSoSecVal");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeBuy", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "AnalyzerUser")
                        .WithMany()
                        .HasForeignKey("AnalyzerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", "Instrument")
                        .WithMany("InstrumentAnalayzeBuys")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeSell", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "AnalyzerUser")
                        .WithMany()
                        .HasForeignKey("AnalyzerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", "Instrument")
                        .WithMany("InstrumentAnalayzeSells")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentCycle", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", "Instrument")
                        .WithMany("InstrumentCycles")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "SenderUser")
                        .WithMany("InstrumentCycles")
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentDescriptionBuy", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeBuy", "InstrumentAnalayzeBuy")
                        .WithMany("InstrumentDescriptionBuys")
                        .HasForeignKey("InstrumentAnalayzeBuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentDescriptionSell", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeSell", "InstrumentAnalayzeSell")
                        .WithMany("InstrumentDescriptionSells")
                        .HasForeignKey("InstrumentAnalayzeSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentInformation", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", "Instrument")
                        .WithMany("InstrumentInformations")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentUserMapper", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Board", "Board")
                        .WithMany()
                        .HasForeignKey("CComVal");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("CSecVal");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SubSector", "SubSector")
                        .WithMany()
                        .HasForeignKey("CSoSecVal");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("InstrumentUserMappers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Request", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Instrument", "Instrument")
                        .WithMany("Requests")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SpecialInstrumentAnalayzedBuy", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeBuy", "InstrumentAnalayzeBuy")
                        .WithMany("SpecialInstrumentAnalayzedBuys")
                        .HasForeignKey("InstrumentAnalayzeBuyId");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("SpecialInstrumentAnalayzedBuys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SpecialInstrumentAnalayzedSell", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeSell", "InstrumentAnalayzeSell")
                        .WithMany("SpecialInstrumentAnalayzedSells")
                        .HasForeignKey("InstrumentAnalayzeSellId");

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("SpecialInstrumentAnalayzedSells")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.SubSector", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("CSecVal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.GroupAuth", "GroupAuth")
                        .WithMany("Users")
                        .HasForeignKey("GroupAuthId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserConfiguration", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("UserConfigurations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRankInstrumentBuy", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeBuy", "InstrumentAnalayzeBuy")
                        .WithMany("UserRankInstrumentBuys")
                        .HasForeignKey("InstrumentAnalayzeBuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", null)
                        .WithMany("UserRankInstrumentBuys")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRankInstrumentSell", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.InstrumentAnalayzeSell", "InstrumentAnalayzeSell")
                        .WithMany("UserRankInstrumentSells")
                        .HasForeignKey("InstrumentAnalayzeSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", null)
                        .WithMany("UserRankInstrumentSells")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserRole", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.UserToken", b =>
                {
                    b.HasOne("MSHB.StockAssistanceProvider.Layers.L01_Entities.Models.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
